table(BatAct$Date)
setwd("C:/Users/eliwi/OneDrive/Documents/R/Rabbits/Rabbits")
y_list <- readRDS("./y_list.rds")
View(y_list)
y_list[["GreyFox"]]
#site covariates
CoVs <- readRDS("./CoVsRabbitCo.rds")
View(CoVs)
#no human detections in this csv
camdf1 <- read.csv("C:/Users/eliwi/OneDrive/Documents/R/TTE/TTE/images.csv")
table(camdf1$common_name)
##   relative activity of predators ##
prey <-c('Black-tailed Jackrabbit', "Mountain Cottontail", "Rock Squirrel", "White-tailed Jackrabbit")
camdf3 <- readRDS("./camdf3indonly.rds")
View(camdf3)
preydf <- camdf3[camdf3$SPP %in% prey,]
preydf <- preydf[,c(2,16,17,22)]
colnames(preydf) <- c("cam","datetime","count","comments")
preydf$datetime <- as.POSIXct(preydf$datetime,format="%Y-%m-%d %H:%M:%S", tz="America/Denver")
BUSH3 <- which(preydf$cam == "BUSH3")
preydf$cam <- replace(x = preydf$cam,list=BUSH3, values = "BUSH4")
preydf2 <- preydf[preydf$datetime >= study_dates[1] & preydf$datetime <= study_dates[2],]
#set dates of study
study_dates <- c("2022-05-04", "2022-06-15")
#make camera operability matrix
DTimes2 <- read.csv("./Deployment Times - Sheet2.csv", na.strings = c("", "NA"))
DTimes2$setup <- as.Date(str_extract(DTimes2$X, ".*(?=-)"), format= "%m/%d/%Y")
DTimes2$retrieval <- as.Date(ifelse(!is.na(DTimes2$X.1)==FALSE, str_extract(DTimes2$X, "(?<=-).*"),
str_extract(DTimes2$X.1, "(?<=-).*")), format= "%m/%d/%Y")
#have to change detection matrices (84,85) and relative abundances of humans and
#predators at camera sites when study dates are changed
library(camtrapR)
library(ggplot2)
library(lubridate)
library(stringr)
library(sf)
library(raster)
library(terra)
library(purrr)
library(corrplot)
library(rnoaa)
library(data.table)
library(dplyr)
DTimes2$setup <- as.Date(str_extract(DTimes2$X, ".*(?=-)"), format= "%m/%d/%Y")
DTimes2$retrieval <- as.Date(ifelse(!is.na(DTimes2$X.1)==FALSE, str_extract(DTimes2$X, "(?<=-).*"),
str_extract(DTimes2$X.1, "(?<=-).*")), format= "%m/%d/%Y")
DTimes2$Problem1_from<-as.Date(ifelse(!is.na(DTimes2$X.1)==FALSE, NA,
str_extract(DTimes2$X, "(?<=-).*")), format= "%m/%d/%Y")
DTimes2$Problem1_to <-as.Date(ifelse(!is.na(DTimes2$X.1)==FALSE, NA,
str_extract(DTimes2$X.1, ".*(?=-)")), format= "%m/%d/%Y")
camOps <- cameraOperation(CTtable = DTimes2, stationCol = "Camera", setupCol = "setup",
retrievalCol = "retrieval", hasProblems = T, dateFormat = "%Y-%m-%d")
preydf2 <- preydf[preydf$datetime >= study_dates[1] & preydf$datetime <= study_dates[2],]
predf2 <- predf2 %>% group_by(cam)%>% summarise(PredSum= sum(count))
preydf2 <- preydf2 %>% group_by(cam)%>% summarise(PreySum= sum(count))
colnames(preydf2) <- c("Camera", "SumPreds")
noprey <- which(DTimes2$Camera %in% preydf2$Camera == FALSE)
nopreyrow <- data.frame("Camera"=DTimes2$Camera[noprey], "SumPreds" = 0)
PreyatCam <- rbind(preydf2, nopreyrow)
PreyatCam2 <- left_join(PreyatCam, Effort, by="Camera")
colidx <- which(colnames(camOps) %in% study_dates)
Effort <- data.frame("Effort"=rowSums(camOps[,33:75], na.rm=T))
Effort$Camera <- rownames(Effort)
PreyatCam2 <- left_join(PreyatCam, Effort, by="Camera")
View(PreyatCam2)
colnames(preydf2) <- c("Camera", "SumPrey")
PreyatCam2$PreyRA <- PreyatCam2$SumPrey/PreyatCam2$Effort
View(PreyatCam2)
View(PreyatCam)
View(preydf)
View(preydf2)
PreyatCam <- rbind(preydf2, nopreyrow)
nopreyrow <- data.frame("Camera"=DTimes2$Camera[noprey], "SumPrey" = 0)
PreyatCam <- rbind(preydf2, nopreyrow)
PreyatCam2 <- left_join(PreyatCam, Effort, by="Camera")
PreyatCam2$PreyRA <- PreyatCam2$SumPrey/PreyatCam2$Effort
View(DTimes2)
#NAs in RA where no cam effort is
PreyatCam2$PreyRA[is.na(PreyatCam2$PreyRA)] <- mean(PreyatCam2$PreyRA, na.rm=TRUE)
CoVsList <- list(PreyatCam2,Dist2TrailDF,HumansatCam2,CamLocs2,LineLengthGrid, LineLength150, ForestDF,ShrubDF)
#####Covariates######################
# Camera Grid shapefile
Grid <- st_read("C:/Users/eliwi/OneDrive/Documents/Salida/GeospatialLayers/Grid3.shp")
CamLocs <- read.csv("C:/Users/eliwi/OneDrive/Documents/R/TTE/TTE/CamLocs.csv")
str(CamLocs)
CamLocs <- CamLocs[-c(38:41),]
CamLocs[25, c(2,3)] <- c("38.498457","-105.986953") #BUSH19
CamLocs[11, c(2,3)] <- c("38.505164","-105.014628") #BUSH5
#Line Length- length of trails in grid cell
LineLength <- read.csv("C:/Users/eliwi/OneDrive/Documents/R/TTE/TTE/LineLength.csv")
LineLengthGrid <- LineLength[-5,]
LineLengthGrid <- LineLengthGrid[, c(9,11)]
colnames(LineLengthGrid)[1] <- "LengthGrid"
LineLength150 <- read.csv("C:/Users/eliwi/OneDrive/Documents/R/TTE/TTE/LineLength150.csv")
LineLength150 <- LineLength150[-5,]
colnames(LineLength150)[2] <- "Length150"
LineLength150 <- LineLength150[, c(4,2)]
#lc at different distances
lc <- raster("C:/Users/eliwi/OneDrive/Documents/R/DeerISSFTWS/CoVs/NLCD_2019_Land_Cover_L48_20210604_JbsuwO6GkIW9V4xHbi6d.tiff")
plot(lc)
projection(lc)
freq(lc)
rcl <- matrix(data=c(22,23,24,42,43,81,82,95,21,21,21,41,41,71,71,90), nrow=8, ncol=2)
lc2 <- reclassify(lc, rcl=rcl)
plot(lc2)
CamLocsSF<-st_as_sf(CamLocs, coords=c("Long", "Lat"), crs=CRS("+init=epsg:4326"))
CamLocsSF<-st_transform(CamLocsSF, projection(lc))
lc100<-raster::extract(lc2, CamLocsSF, buffer=100)
lc250 <- raster::extract(lc2, CamLocsSF, buffer=250)
lc385 <- raster::extract(lc2, CamLocsSF, buffer=385)
z <- sort(unique(raster::values(lc2)))
summaryValueslc100 <- lapply(lc100,FUN = summarizeLC,LC_classes = z)
summaryValueslc250 <- lapply(lc250,FUN = summarizeLC,LC_classes = z)
##########################################################
##                      functions                       ##
##########################################################
summarizeLC <- function(x,LC_classes,LC_names = NULL){
# Find the number of cells
y <- length(x)
# Make a table of the cells
tx <- table(x)
# Create an empty array to store landcover data
LC <- array(NA,c(1,length(LC_classes)))
# Loop through the landcover types & return
# the number of cells within each landcover type
for(i in seq(LC_classes)){
LC[1,i] <- ifelse(LC_classes[i] %in% dimnames(tx)[[1]],
#if true
tx[which(dimnames(tx)[[1]]==LC_classes[i])],
# if false
0)
} # end loop
# Convert to percentage
LC <- LC/y
#
if(!is.null(LC_names)){
colnames(LC)<-LC_names}
else{colnames(LC)<-LC_classes}
return(LC)
}
summaryValueslc100 <- lapply(lc100,FUN = summarizeLC,LC_classes = z)
summaryValueslc250 <- lapply(lc250,FUN = summarizeLC,LC_classes = z)
summaryValueslc385 <- lapply(lc385,FUN = summarizeLC,LC_classes = z)
listnames <- CamLocs$Camera
names(summaryValueslc100) <- listnames
names(summaryValueslc250) <- listnames
names(summaryValueslc385) <- listnames
lclist <- list('LC100'=summaryValueslc100,'LC250'=summaryValueslc250,'LC385'=summaryValueslc385)
lclist <- lapply(lclist, function (x) lapply(x, function (x) as.data.frame(t(x))))
lclist <- lapply(lclist, function (x) lapply(x, function (x) cbind(x, lc= rownames(x))))
lclist <- lapply(lclist, function (x) rbindlist(x, idcol = T))
LCDF <- reduce(lclist, full_join, by=c(".id", "lc"))
colnames(LCDF)[c(2,4,5)] <- c('lc100','lc250', 'lc385')
LCDF <- LCDF[LCDF$.id != "BUSH03",]
colnames(LCDF)[1] <- "Camera"
ForestDF <- LCDF[LCDF$lc == 41,]
ShrubDF <- LCDF[LCDF$lc == 52,]
ForestDF$Camera[7:14] <- c("BUSH1","BUSH2","BUSH4","BUSH5","BUSH6","BUSH7","BUSH8","BUSH9")
ShrubDF$Camera[7:14] <- c("BUSH1","BUSH2","BUSH4","BUSH5","BUSH6","BUSH7","BUSH8","BUSH9")
colnames(ForestDF)[2:5] <- c("lc100.Forest","Forest", "lc250.Forest","lc385.Forest")
colnames(ShrubDF)[2:5] <- c("lc100.Shrub","Shrub", "lc250.Shrub","lc385.Shrub")
#get distance to trail for all points
Trails <- st_read(dsn='C:/Users/eliwi/OneDrive/Documents/Salida/AllTrails.shp')
Trails2 <- st_union(Trails)
CamLocsSF2 <- st_transform(CamLocsSF, crs=st_crs(Trails))
Dist2Trail <- st_distance(CamLocsSF2, Trails2)
Dist2TrailDF <- cbind.data.frame(CamLocs2$Camera,as.numeric(Dist2Trail))
colnames(Dist2TrailDF) <- c("Camera","Dist2Trail")
Dist2TrailDF <- cbind.data.frame(CamLocs$Camera,as.numeric(Dist2Trail))
colnames(Dist2TrailDF) <- c("Camera","Dist2Trail")
#slope
Slope <- raster("C:/Users/eliwi/OneDrive/Documents/R/TTE/TTE/Slope2.tif")
projection(Slope)
CamLocsSF<-st_transform(CamLocsSF, projection(Slope))
CamLocs2$slope<-raster::extract(Slope, CamLocsSF)
CamLocs2$slope100 <- raster::extract(Slope, CamLocsSF, buffer=100, fun=function(x) mean(x))
#CamLocs2$distherb <- CamLocs$distherb
CamLocs2 <- CamLocs[,-c(4:11,12)]
CamLocs2$slope<-raster::extract(Slope, CamLocsSF)
CamLocs2$slope100 <- raster::extract(Slope, CamLocsSF, buffer=100, fun=function(x) mean(x))
#human detections in this csv
camdf <- read.csv("C:/Users/eliwi/OneDrive/Documents/R/TTE/TTE/wildlifeinsights5.5/images.csv")
camdf$timestamp <- as.POSIXct(camdf$timestamp,format="%Y-%m-%d %H:%M:%S", tz="America/Denver")
camdf$DateTimeOriginal <- camdf$timestamp
#BUSH31 fix dates
datefix <- c("7-19-2022 00:00:00", "4-24-2022 00:00:00")
datefix <- as.POSIXct(datefix, format="%m-%d-%Y %H:%M:%S")
datefix[1]-datefix[2] #86 days
datefix[2] + 60*60*24*86
for (i in 1:nrow(camdf)){
if(camdf$timestamp[i] < "2022-07-19 00:00:00" & camdf$deployment_id[i] == "BUSH31") {
camdf$timestamp[i] <- camdf$timestamp[i] + 60*60*24*86
}
}
ppldf <- camdf3[camdf3$genus=="Homo",]
ppldf <- ppldf[,c(2,16,17,22)]
colnames(ppldf) <- c("cam","datetime","count","comments")
ppldf$datetime <- as.POSIXct(ppldf$datetime,format="%Y-%m-%d %H:%M:%S", tz="America/Denver")
BUSH3 <- which(ppldf$cam == "BUSH3")
ppldf$cam <- replace(x = ppldf$cam,list=BUSH3, values = "BUSH4")
ppldf2 <- ppldf[ppldf$datetime >= study_dates[1] & ppldf$datetime <= study_dates[2],]
ppldf2 <- ppldf2 %>% group_by(cam)%>% summarise(HumanSum= sum(count))
colnames(ppldf2) <- c("Camera", "SumPpl")
noppl <- which(DTimes2$Camera %in% ppldf2$Camera == FALSE)
nopplrow <- data.frame("Camera"=DTimes2$Camera[noppl], "SumPpl" = 0)
HumansatCam <- rbind(ppldf2, nopplrow)
HumansatCam2 <- left_join(HumansatCam, Effort, by="Camera")
HumansatCam2$HumansRA <- HumansatCam2$SumPpl/HumansatCam2$Effort
#NAs in RA where no cam effort is
HumansatCam2$HumansRA[is.na(HumansatCam2$HumansRA)] <- mean(HumansatCam2$HumansRA, na.rm=TRUE)
CoVsList <- list(PreyatCam2,Dist2TrailDF,HumansatCam2,CamLocs2,LineLengthGrid, LineLength150, ForestDF,ShrubDF)
CamLocs2$Camera[7:15] <- c("BUSH1","BUSH2","BUSH3","BUSH4","BUSH5","BUSH6","BUSH7","BUSH8","BUSH9")
CoVs <- CoVsList%>% reduce(left_join, by="Camera")
CoVs$Brand <- ifelse(grepl("BUSH", CoVs$Camera) ==TRUE, "BUSH", "ACORN")
CoVs[CoVs$Camera == "BUSH3",]
saveRDS(CoVs, "CoVsRabbitCo.rds")
View(CoVs)
View(CamLocs2)
View(CamLocs)
CamLocs$Camera[7:15] <- c("BUSH1","BUSH2","BUSH3","BUSH4","BUSH5","BUSH6","BUSH7","BUSH8","BUSH9")
CamLocsSF<-st_as_sf(CamLocs, coords=c("Long", "Lat"), crs=CRS("+init=epsg:4326"))
CamLocsSF2 <- st_transform(CamLocsSF, crs=st_crs(Trails))
Dist2Trail <- st_distance(CamLocsSF2, Trails2)
Dist2TrailDF <- cbind.data.frame(CamLocs$Camera,as.numeric(Dist2Trail))
colnames(Dist2TrailDF) <- c("Camera","Dist2Trail")
CamLocsSF<-st_transform(CamLocsSF, projection(Slope))
CamLocs2$slope<-raster::extract(Slope, CamLocsSF)
CamLocs2$slope100 <- raster::extract(Slope, CamLocsSF, buffer=100, fun=function(x) mean(x))
CoVsList <- list(PreyatCam2,Dist2TrailDF,HumansatCam2,CamLocs2,LineLengthGrid, LineLength150, ForestDF,ShrubDF)
CoVs <- CoVsList%>% reduce(left_join, by="Camera")
CoVs$Brand <- ifelse(grepl("BUSH", CoVs$Camera) ==TRUE, "BUSH", "ACORN")
CoVs[CoVs$Camera == "BUSH3",]
View(CoVs)
saveRDS(CoVs, "CoVsRabbitCo.rds")
camdf1$timestamp <- as.POSIXct(camdf1$timestamp,format="%Y-%m-%d %H:%M:%S", tz="America/Denver")
#BUSH31 fix dates
datefix <- c("7-19-2022 00:00:00", "4-24-2022 00:00:00")
datefix <- as.POSIXct(datefix, format="%m-%d-%Y %H:%M:%S")
datefix[1]-datefix[2] #86 days
datefix[2] + 60*60*24*86
for (i in 1:nrow(camdf1)){
if(camdf1$timestamp[i] < "2022-07-19 00:00:00" & camdf1$deployment_id[i] == "BUSH31") {
camdf1$timestamp[i] <- camdf1$timestamp[i] + 60*60*24*86
}
}
#winnow dataframe down to lagomorphs
df <- camdf1[camdf1$common_name=="Grey Fox" | camdf1$common_name == "Red Fox" | camdf1$common_name == "Coyote",]
df <- df[,c(2,4,14,16,17,22)]
colnames(df) <- c("cam","file","species","datetime","count","comments")
#replace BUSH3 with BUSH4
BUSH3 <- which(df$cam == "BUSH3")
df$cam <- replace(x = df$cam,list=BUSH3, values = "BUSH4")
df$cam <- as.factor(df$cam)
GreyDetect <- detectionHistory(recordTable = df, species = "Grey Fox", camOp = camOps,
output="binary", stationCol = "cam", speciesCol = "species",
recordDateTimeCol = "datetime", recordDateTimeFormat = "%Y-%m-%d %H:%M:%S",
timeZone = "America/Denver", includeEffort = FALSE, occasionLength = 1,
day1="2022-04-02")
RedDetect <- detectionHistory(recordTable = df, species = "Red Fox", camOp = camOps,
output="binary", stationCol = "cam", speciesCol = "species",
recordDateTimeCol = "datetime", recordDateTimeFormat = "%Y-%m-%d %H:%M:%S",
timeZone = "America/Denver", includeEffort = FALSE, occasionLength = 1,
day1="2022-04-02")
CoyoteDetect <- detectionHistory(recordTable = df, species = "Coyote", camOp = camOps,
output="binary", stationCol = "cam", speciesCol = "species",
recordDateTimeCol = "datetime", recordDateTimeFormat = "%Y-%m-%d %H:%M:%S",
timeZone = "America/Denver", includeEffort = FALSE, occasionLength = 1,
day1="2022-04-02")
colnames(GreyDetect[["detection_history"]]) <- as.character(seq.Date(min(DTimes2$setup), max(DTimes2$retrieval), by = 1))
colnames(RedDetect[["detection_history"]]) <- as.character(seq.Date(min(DTimes2$setup), max(DTimes2$retrieval), by = 1))
colnames(CoyoteDetect[["detection_history"]]) <- as.character(seq.Date(min(DTimes2$setup), max(DTimes2$retrieval), by = 1))
#make index to subset whole detection history
dateidx <- which(colnames(GreyDetect[["detection_history"]]) %in% study_dates)
#get detection matrix to study dates
GreyDetect2 <- GreyDetect[["detection_history"]][, 33:75]
RedDetect2 <- RedDetect[["detection_history"]][, 33:75]
CoyoteDetect2 <- CoyoteDetect[["detection_history"]][, 33:75]
saveRDS(GreyDetect2, "./GreyDetect2.rds")
saveRDS(RedDetect2, "./RedDetect2.rds")
saveRDS(CoyoteDetect2, "./CoyoteDetect2.rds")
which(GreyDetect2[NArows,])
#find rows with no detction info
NArows <- which(apply(GreyDetect2, 1, function(x) all(is.na(x))))
rownames(CottonDetect2)[NArows]
rownames(GreyDetect2)[NArows]
Covs2 <- CoVs[!CoVs$Camera == "BUSH1" & !CoVs$Camera == "BUSH28",]
Covs3 <- Covs2
scaleind <- sapply(Covs3, is.numeric)
Covs3[scaleind] <- lapply(Covs3[scaleind], scale)
# combine data into an unmarkedFrameOccuMulti object:
msom_data <- unmarkedFrameOccuMulti(y = y_list,
siteCovs = Covs3)
library(unmarked)
#null model, intercept only model assuming independence
null <- occuMulti(detformulas = c('~1', '~1', '~1'),
stateformulas = c('~1', '~1', '~1'),
maxOrder = 1,
data = msom_data)
# combine data into an unmarkedFrameOccuMulti object:
msom_data <- unmarkedFrameOccuMulti(y = y_list,
siteCovs = Covs3)
#null model, intercept only model assuming independence
null <- occuMulti(detformulas = c('~1', '~1', '~1'),
stateformulas = c('~1', '~1', '~1'),
maxOrder = 1,
data = msom_data)
View(GreyDetect2)
View(CamLocs2)
View(CamLocs)
CamLocs[11, c(2,3)] <- c("38.505164","-106.014628") #BUSH5
CamLocsSF<-st_as_sf(CamLocs, coords=c("Long", "Lat"), crs=CRS("+init=epsg:4326"))
CamLocsSF2 <- st_transform(CamLocsSF, crs=st_crs(Trails))
Dist2Trail <- st_distance(CamLocsSF2, Trails2)
Dist2TrailDF <- cbind.data.frame(CamLocs$Camera,as.numeric(Dist2Trail))
colnames(Dist2TrailDF) <- c("Camera","Dist2Trail")
CamLocsSF<-st_transform(CamLocsSF, projection(Slope))
detach("package:unmarked", unload = TRUE)
CamLocsSF<-st_transform(CamLocsSF, projection(Slope))
CamLocs2$slope<-raster::extract(Slope, CamLocsSF)
CamLocs2$slope100 <- raster::extract(Slope, CamLocsSF, buffer=100, fun=function(x) mean(x))
View(CamLocs)
View(Dist2TrailDF)
CoVsList <- list(PreyatCam2,Dist2TrailDF,HumansatCam2,CamLocs2,LineLengthGrid, LineLength150, ForestDF,ShrubDF)
CoVs <- CoVsList%>% reduce(left_join, by="Camera")
CoVs$Brand <- ifelse(grepl("BUSH", CoVs$Camera) ==TRUE, "BUSH", "ACORN")
CoVs[CoVs$Camera == "BUSH3",]
saveRDS(CoVs, "CoVsRabbitCo.rds")
library(unmarked)
Covs2 <- CoVs[!CoVs$Camera == "BUSH1" & !CoVs$Camera == "BUSH28",]
Covs3 <- Covs2
scaleind <- sapply(Covs3, is.numeric)
Covs3[scaleind] <- lapply(Covs3[scaleind], scale)
# combine data into an unmarkedFrameOccuMulti object:
msom_data <- unmarkedFrameOccuMulti(y = y_list,
siteCovs = Covs3)
#null model, intercept only model assuming independence
null <- occuMulti(detformulas = c('~1', '~1', '~1'),
stateformulas = c('~1', '~1', '~1'),
maxOrder = 1,
data = msom_data)
summary(null)
View(CoyoteDetect2)
#null model, intercept only model assuming dependence
fit_2 <- occuMulti(detformulas = c('~1', '~1', '~1'),
stateformulas = c('~1', '~1','~1',
'~1', '~1','~1'),
maxOrder = 2,
data = msom_data)
summary(fit_2)
#set dates of study
study_dates <- c("2022-05-04", "2022-08-15")
#make index to subset whole detection history
dateidx <- which(colnames(GreyDetect[["detection_history"]]) %in% study_dates)
#get detection matrix to study dates
GreyDetect2 <- GreyDetect[["detection_history"]][, 33:136]
RedDetect2 <- RedDetect[["detection_history"]][, 33:136]
CoyoteDetect2 <- CoyoteDetect[["detection_history"]][, 33:136]
ppldf2 <- ppldf[ppldf$datetime >= study_dates[1] & ppldf$datetime <= study_dates[2],]
ppldf2 <- ppldf2 %>% group_by(cam)%>% summarise(HumanSum= sum(count))
colnames(ppldf2) <- c("Camera", "SumPpl")
noppl <- which(DTimes2$Camera %in% ppldf2$Camera == FALSE)
nopplrow <- data.frame("Camera"=DTimes2$Camera[noppl], "SumPpl" = 0)
HumansatCam <- rbind(ppldf2, nopplrow)
HumansatCam2 <- left_join(HumansatCam, Effort, by="Camera")
HumansatCam2$HumansRA <- HumansatCam2$SumPpl/HumansatCam2$Effort
#NAs in RA where no cam effort is
HumansatCam2$HumansRA[is.na(HumansatCam2$HumansRA)] <- mean(HumansatCam2$HumansRA, na.rm=TRUE)
preydf2 <- preydf[preydf$datetime >= study_dates[1] & preydf$datetime <= study_dates[2],]
preydf2 <- preydf2 %>% group_by(cam)%>% summarise(PreySum= sum(count))
colnames(preydf2) <- c("Camera", "SumPrey")
noprey <- which(DTimes2$Camera %in% preydf2$Camera == FALSE)
nopreyrow <- data.frame("Camera"=DTimes2$Camera[noprey], "SumPrey" = 0)
PreyatCam <- rbind(preydf2, nopreyrow)
PreyatCam2 <- left_join(PreyatCam, Effort, by="Camera")
PreyatCam2$PreyRA <- PreyatCam2$SumPrey/PreyatCam2$Effort
#NAs in RA where no cam effort is
PreyatCam2$PreyRA[is.na(PreyatCam2$PreyRA)] <- mean(PreyatCam2$PreyRA, na.rm=TRUE)
CoVsList <- list(PreyatCam2,Dist2TrailDF,HumansatCam2,CamLocs2,LineLengthGrid, LineLength150, ForestDF,ShrubDF)
CoVs <- CoVsList%>% reduce(left_join, by="Camera")
CoVs$Brand <- ifelse(grepl("BUSH", CoVs$Camera) ==TRUE, "BUSH", "ACORN")
CoVs[CoVs$Camera == "BUSH3",]
saveRDS(CoVs, "CoVsRabbitCo.rds")
#find rows with no detction info
NArows <- which(apply(GreyDetect2, 1, function(x) all(is.na(x))))
#Detection/non-detection data in named list
y_list <- list(GreyFox = GreyDetect2[-NArows,],
RedFox = RedDetect2[-NArows,],
Coyote = CoyoteDetect2[-NArows,])
Covs3 <- Covs2
scaleind <- sapply(Covs3, is.numeric)
Covs3[scaleind] <- lapply(Covs3[scaleind], scale)
# combine data into an unmarkedFrameOccuMulti object:
msom_data <- unmarkedFrameOccuMulti(y = y_list,
siteCovs = Covs3)
View(y_list)
#Detection/non-detection data in named list
y_list <- list(GreyFox = GreyDetect2, #[-NArows,]
RedFox = RedDetect2, #[-NArows,]
Coyote = CoyoteDetect2) #[-NArows,]
# combine data into an unmarkedFrameOccuMulti object:
msom_data <- unmarkedFrameOccuMulti(y = y_list,
siteCovs = Covs3)
View(y_list)
Covs3 <- Covs
scaleind <- sapply(Covs3, is.numeric)
Covs3[scaleind] <- lapply(Covs3[scaleind], scale)
# combine data into an unmarkedFrameOccuMulti object:
msom_data <- unmarkedFrameOccuMulti(y = y_list,
siteCovs = Covs3)
Covs3 <- CoVs
scaleind <- sapply(Covs3, is.numeric)
Covs3[scaleind] <- lapply(Covs3[scaleind], scale)
# combine data into an unmarkedFrameOccuMulti object:
msom_data <- unmarkedFrameOccuMulti(y = y_list,
siteCovs = Covs3)
#null model, intercept only model assuming independence
null <- occuMulti(detformulas = c('~1', '~1', '~1'),
stateformulas = c('~1', '~1', '~1'),
maxOrder = 1,
data = msom_data)
View(Covs3)
colidx <- which(colnames(camOps) %in% study_dates)
Effort <- data.frame("Effort"=rowSums(camOps[,33:136], na.rm=T))
Effort$Camera <- rownames(Effort)
ppldf <- camdf3[camdf3$genus=="Homo",]
ppldf <- ppldf[,c(2,16,17,22)]
colnames(ppldf) <- c("cam","datetime","count","comments")
ppldf$datetime <- as.POSIXct(ppldf$datetime,format="%Y-%m-%d %H:%M:%S", tz="America/Denver")
BUSH3 <- which(ppldf$cam == "BUSH3")
ppldf$cam <- replace(x = ppldf$cam,list=BUSH3, values = "BUSH4")
ppldf2 <- ppldf[ppldf$datetime >= study_dates[1] & ppldf$datetime <= study_dates[2],]
ppldf2 <- ppldf2 %>% group_by(cam)%>% summarise(HumanSum= sum(count))
colnames(ppldf2) <- c("Camera", "SumPpl")
noppl <- which(DTimes2$Camera %in% ppldf2$Camera == FALSE)
nopplrow <- data.frame("Camera"=DTimes2$Camera[noppl], "SumPpl" = 0)
HumansatCam <- rbind(ppldf2, nopplrow)
HumansatCam2 <- left_join(HumansatCam, Effort, by="Camera")
HumansatCam2$HumansRA <- HumansatCam2$SumPpl/HumansatCam2$Effort
#NAs in RA where no cam effort is
HumansatCam2$HumansRA[is.na(HumansatCam2$HumansRA)] <- mean(HumansatCam2$HumansRA, na.rm=TRUE)
View(HumansatCam2)
##   relative activity of predators ##
prey <-c('Black-tailed Jackrabbit', "Mountain Cottontail", "Rock Squirrel", "White-tailed Jackrabbit")
preydf <- camdf3[camdf3$SPP %in% prey,]
preydf <- preydf[,c(2,16,17,22)]
colnames(preydf) <- c("cam","datetime","count","comments")
preydf$datetime <- as.POSIXct(preydf$datetime,format="%Y-%m-%d %H:%M:%S", tz="America/Denver")
BUSH3 <- which(preydf$cam == "BUSH3")
preydf$cam <- replace(x = preydf$cam,list=BUSH3, values = "BUSH4")
preydf2 <- preydf[preydf$datetime >= study_dates[1] & preydf$datetime <= study_dates[2],]
preydf2 <- preydf2 %>% group_by(cam)%>% summarise(PreySum= sum(count))
colnames(preydf2) <- c("Camera", "SumPrey")
noprey <- which(DTimes2$Camera %in% preydf2$Camera == FALSE)
nopreyrow <- data.frame("Camera"=DTimes2$Camera[noprey], "SumPrey" = 0)
PreyatCam <- rbind(preydf2, nopreyrow)
PreyatCam2 <- left_join(PreyatCam, Effort, by="Camera")
PreyatCam2$PreyRA <- PreyatCam2$SumPrey/PreyatCam2$Effort
#NAs in RA where no cam effort is
PreyatCam2$PreyRA[is.na(PreyatCam2$PreyRA)] <- mean(PreyatCam2$PreyRA, na.rm=TRUE)
PreyatCam <- rbind(preydf2, nopreyrow)
PreyatCam2 <- left_join(PreyatCam, Effort, by="Camera")
PreyatCam2$PreyRA <- PreyatCam2$SumPrey/PreyatCam2$Effort
#NAs in RA where no cam effort is
PreyatCam2$PreyRA[is.na(PreyatCam2$PreyRA)] <- mean(PreyatCam2$PreyRA, na.rm=TRUE)
View(PreyatCam2)
CoVsList <- list(PreyatCam2,Dist2TrailDF,HumansatCam2,CamLocs2,LineLengthGrid, LineLength150, ForestDF,ShrubDF)
CoVs <- CoVsList%>% reduce(left_join, by="Camera")
CoVs$Brand <- ifelse(grepl("BUSH", CoVs$Camera) ==TRUE, "BUSH", "ACORN")
CoVs[CoVs$Camera == "BUSH3",]
Covs3 <- CoVs
scaleind <- sapply(Covs3, is.numeric)
Covs3[scaleind] <- lapply(Covs3[scaleind], scale)
# combine data into an unmarkedFrameOccuMulti object:
msom_data <- unmarkedFrameOccuMulti(y = y_list,
siteCovs = Covs3)
#null model, intercept only model assuming independence
null <- occuMulti(detformulas = c('~1', '~1', '~1'),
stateformulas = c('~1', '~1', '~1'),
maxOrder = 1,
data = msom_data)
summary(null)
View(GreyDetect2)
#Detection/non-detection data in named list
y_list <- list(GreyFox = GreyDetect2, #[-NArows,]
RedFox = RedDetect2) #[-NArows,]
# combine data into an unmarkedFrameOccuMulti object:
msom_data <- unmarkedFrameOccuMulti(y = y_list,
siteCovs = Covs3)
#null model, intercept only model assuming independence
null <- occuMulti(detformulas = c('~1', '~1'),
stateformulas = c('~1', '~1'),
maxOrder = 1,
data = msom_data)
summary(null)
#null model, intercept only model assuming dependence
fit_2 <- occuMulti(detformulas = c('~1', '~1'),
stateformulas = c('~1', '~1','~1'),
maxOrder = 2,
data = msom_data)
summary(fit_2)
#Detection/non-detection data in named list
y_list <- list(GreyFox = GreyDetect2, #[-NArows,]
Coyote = CoyoteDetect2) #[-NArows,]
# combine data into an unmarkedFrameOccuMulti object:
msom_data <- unmarkedFrameOccuMulti(y = y_list,
siteCovs = Covs3)
#null model, intercept only model assuming dependence
fit_2 <- occuMulti(detformulas = c('~1', '~1'),
stateformulas = c('~1', '~1','~1'),
maxOrder = 2,
data = msom_data)
summary(fit_2)
